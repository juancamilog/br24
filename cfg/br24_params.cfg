#!/usr/bin/env python
PACKAGE = "br24"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add('radar_on',bool_t,1, "Turn the radar on of off",True)
gen.add('radar_speed',int_t,1<<1, "Increase or reset the radar speed",0,0,5)
gen.add('radar_range',int_t,1<<2, "Set the radar range",6,0,15)
gen.add('interference_reject',int_t ,1<<3, "Infererence rejection filter",1,0,3)
gen.add('target_boost', int_t,1<<4, "Target Boost",1,0,2)
gen.add('local_interference_filter', int_t,1<<5,"Local interference filter",1,0,3)
gen.add('gain', int_t,1<<6,"Radar gain (0 is auto)",0,0,80)
gen.add('rain_clutter_filter', int_t,1<<7,"Rain clutter filter",77,1,80)
gen.add('sea_clutter_filter', int_t,1<<8,"Sea clutter filter (0 is auto)",0,0,80)

# TODO Use enums to make parameters more meaningful in the dynamic reconfigure gui
size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
                  gen.const("Medium", int_t, 1, "A medium constant"),
                  gen.const("Large", int_t, 2, "A large constant"),
                  gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
                  "An enum to set size")

exit(gen.generate(PACKAGE, "br24", "br24_params"))
